name: CI

on:
  schedule:
    # run every midnight (on main)
    - cron: '0 0 * * *'
  push:
  release:
    types: [published]

jobs:
  test:
    name: Run Unit and E2E Tests
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-tests@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - uses: dasch-swiss/sipi/.github/actions/start-debug-session@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          SSH_GATEWAY_IP: ${{ secrets.SSH_GATEWAY_IP }}
      - run: make test-ci

  integration:
    name: Run Integration Tests
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-tests@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - run: make test-integration

  # publish only on release
  publish-images:
    name: Build and Publish Images to Dockerhub
    needs: [test, integration]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64 #, linux/arm64
          push: true
          tags: daschswiss/sipi:latest, daschswiss/sipi:${{ steps.get_version.outputs.VERSION }}
      - name: Update release notes
        uses: lakto/gren-action@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  # publish aarch64 Docker image
  publish-aarch64:
    name: Build and Publish ARM Image to Dockerhub
    needs: [ test, integration ]
    concurrency:
      group: ${{ github.ref }}-aarch64
      cancel-in-progress: true
    if: github.event_name != 'schedule'
    runs-on: actuated-aarch64
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: docker/setup-buildx-action@v2
      - name: Build and publish sipi aarch64 image to Dockerhub
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          make docker-publish-aarch64

  # publish x86 Docker image
  publish-x86:
    name: Build and Publish x86 Image to Dockerhub
    needs: [ test, integration ]
    concurrency:
      group: ${{ github.ref }}-aarch64
      cancel-in-progress: true
    if: github.event_name != 'schedule'
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: docker/setup-buildx-action@v2
      - name: Build and publish sipi x86 image to Dockerhub
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          make docker-publish-x86


  # build documentation
  docs:
    name: Build Docs Testrun
    runs-on: ubuntu-latest
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-docs@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - run: make docs-build

  # publish documentation on release
  publish-docs:
    name: Build and Publish Docs
    needs: [docs]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CUSTOM_DOMAIN: sipi.io
          CONFIG_FILE: docs/mkdocs.yml
          REQUIREMENTS: docs/requirements.txt
