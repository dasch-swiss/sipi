name: CI

on:
  schedule:
    # run every midnight (on main)
    - cron: '0 0 * * *'
  push:
  release:
    types: [published]

jobs:
  test:
    name: Run Unit and E2E Tests
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-tests@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - uses: self-actuated/hetzner-dns-action@v1
      - name: restart docker
        run: sudo systemctl daemon-reload && sudo systemctl restart docker
      - run: make test-ci

  integration:
    name: Run Integration Tests
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-tests@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - uses: self-actuated/hetzner-dns-action@v1
      - run: make test-integration

  # publish aarch64 Docker image
  publish_aarch64:
    name: Build and Publish aarch64 Image to Dockerhub
    needs: [ test, integration ]
    concurrency:
      group: ${{ github.ref }}-aarch64
      cancel-in-progress: true
    if: github.event_name != 'schedule'
    runs-on: actuated-aarch64
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: self-actuated/hetzner-dns-action@v1
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: make docker-publish-aarch64

  # publish amd64 Docker image
  publish_amd64:
    name: Build and Publish amd64 Image to Dockerhub
    needs: [ test, integration ]
    concurrency:
      group: ${{ github.ref }}-aarch64
      cancel-in-progress: true
    if: github.event_name != 'schedule'
    runs-on: actuated
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: self-actuated/hetzner-dns-action@v1
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: make docker-publish-amd64

  # publish manifest combining aarch64 and amd64 images
  publish_manifest:
    runs-on: ubuntu-latest
    needs: [publish_amd64, publish_aarch64]
    steps:
      - name: Login to container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker-publish-manifest


  # build documentation
  docs:
    name: Build Docs Testrun
    runs-on: ubuntu-latest
    steps:
      - uses: dasch-swiss/sipi/.github/actions/checkout@feature/dev-1990-build-and-publish-sipi-arm-image-using
        with:
          DASCHBOT_PAT: ${{ secrets.DASCHBOT_PAT }}
      - uses: dasch-swiss/sipi/.github/actions/setup-python-for-docs@feature/dev-1990-build-and-publish-sipi-arm-image-using
      - run: make docs-build

  # publish documentation on release
  publish-docs:
    name: Build and Publish Docs
    needs: [docs]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CUSTOM_DOMAIN: sipi.io
          CONFIG_FILE: docs/mkdocs.yml
          REQUIREMENTS: docs/requirements.txt
